library(BiocManager)
library(biomaRt)
library(rmarkdown)
library(tidyverse)
# Load base dependencies
library(tidyverse)
library(magrittr)
#Read in data
Targets <- read.delim("~/Gill_Tapestri/Target_Annotation/Targets.txt")
getwd()
#Read in data
Targets <- read.delim("Targets.txt")
#Subset Data by sites with 2 or less mismatches
Targets <- tibble(subset(Targets, subset = Targets$Mismatches <= 2))
#remove columns unnecessary for Tapestri Amplicon Panel Designer, and match the downstream query for merging
Targets %<>%
select_('Chromosome', 'Position', 'Direction', 'DNA', 'crRNA', 'Mismatches') %>%
mutate_all(~gsub("chr", "", .)) %>%
rename_(chromosome_name = 'Chromosome') %>%
rename_(strand = 'Direction')
Targets$Position <- as.integer(Targets$Position)
Targets$strand <- gsub(x = Targets$strand, pattern = "+", replacement = "1", fixed = TRUE)
Targets$strand <- gsub(x = Targets$strand, pattern = "-", replacement = "-1", fixed = TRUE)
Targets$strand <- as.integer(Targets$strand)
#Use biomaRt to generate metadata
require(biomaRt)
ensembl <- useMart("ensembl", dataset="hsapiens_gene_ensembl")
attr <- c("chromosome_name", "strand", "start_position", "end_position", "hgnc_symbol", "percentage_gene_gc_content",  "description")
bm <- getBM(attributes = attr, mart = ensembl)
#create function for finding matches for gene locations and gene ranges
require(IRanges)
source("is_X_between_Y_n_Z.R")
#Format Pairs Table and remove unnecessary columns
Pairs %>%
select_('first.start', 'second.start', 'second.end') -> Pairs
#Format Pairs Table and remove unnecessary columns
Pairs %>%
select_('first.start', 'second.start', 'second.end') -> Pairs
#Format Pairs Table and remove unnecessary columns
Pairs %>%
select('first.start', 'second.start', 'second.end') -> Pairs
#Format Pairs Table and remove unnecessary columns
Pairs %>%
select('first.start', 'second.start', 'second.end') -> Pairs
is_X_between_Y_n_Z(Targets$Position, bm$start_position, bm$end_position) -> Pairs
#Format Pairs Table and remove unnecessary columns
Pairs %>%
select('first.start', 'second.start', 'second.end') -> Pairs
#rename columns
Pairs %>%
rename(first.start = 'Position') %>%
rename(second.start = 'start_position') %>%
rename(second.end = 'end_position') -> Pairs
#Combine Pair info with biomaRt annotations
left_join(Pairs, bm, by = c('start_position', 'end_position')) -> Pairs
#Combine Target info with Pairs Info
left_join(x = Targets, Pairs, by = c('Position', 'strand', 'chromosome_name')) -> Targets
View(Targets)
getewd()
getwd()
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(error = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(magrittr)
library(png)
library(kableExtra)
knitr::clean_cache()
knitr::fig_path("images/")
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(error = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(magrittr)
library(png)
library(kableExtra)
knitr::clean_cache()
knitr::fig_path("./images/")
paste(getwd(), "/images/")
paste(getwd(), "/images/", sep = "")
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(error = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(magrittr)
library(png)
library(kableExtra)
knitr::clean_cache()
knitr::fig_path(paste(getwd(), "/images/", sep = ""))
getwd()
The intended experiment will use catalytically-inactivated spCAS9 (dCAS9) attached to an adenine deaminase (in other words, a gen8 A-Base-Editor, ABE8) to edit CD45 in AML patient samples, and then use Tapestri single-cell DNA sequencing to characterize clonal populations while quantifying off-target base-editing. The amplicons for the Tapestri panel will include the standard AML clonal markers, in addition to the target sequence and the potential off-target sequences.
---
title: "CRISPR Off-Target Sites for CD45"
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(error = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(magrittr)
library(png)
library(kableExtra)
knitr::clean_cache()
knitr::fig_path(paste(getwd(), "/images/", sep = ""))
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(error = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(magrittr)
library(png)
library(kableExtra)
knitr::clean_cache()
knitr::fig_path("~/Gill_Tapestri/images/")
#Read in data
Targets <- read.delim("Targets.txt")
#Subset Data by sites with 2 or less mismatches
Targets <- tibble(subset(Targets, subset = Targets$Mismatches <= 2))
#remove columns unnecessary for Tapestri Amplicon Panel Designer, and match the downstream query for merging
Targets %<>%
dplyr::select('Chromosome', 'Position', 'Direction', 'DNA', 'crRNA', 'Mismatches') %>%
mutate_all(~gsub("chr", "", .)) %>%
rename(chromosome_name = 'Chromosome') %>%
rename(strand = 'Direction')
